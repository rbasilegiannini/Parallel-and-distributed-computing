#!/bin/bash
##########################
# #
# The PBS directives #
# #
##########################
#PBS -q studenti
#PBS -l nodes=1
#PBS -N matmat
#PBS -o matmat_E1.out
#PBS -e matmat.err
####################################
# -q coda su cui va eseguito il job #
# -l numero di nodi richiesti #
# -N nome job #
# -o, -e nome files contenente lâ€™output #
##########################################
NCPU=`wc -l < $PBS_NODEFILE`
echo ------------------------------------------------------
echo 'This job is allocated on '${NCPU}' cpu(s)'
echo 'Job is running on node(s): '
cat $PBS_NODEFILE
PBS_O_WORKDIR=$PBS_O_HOME/es3
echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------
echo "Compilo:/usr/lib64/openmpi/1.4-gcc/bin/mpicc -o $PBS_O_WORKDIR/matmat $PBS_O_WORKDIR/matmat.c"
/usr/lib64/openmpi/1.4-gcc/bin/mpicc -o $PBS_O_WORKDIR/matmat $PBS_O_WORKDIR/matmat.c

echo "Eseguo:/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFIL E -np $NCPU $PBS_O_WORKDIR/matmat"
/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFILE -np $NCPU $PBS_O_WORKDIR/matmat 2 16

